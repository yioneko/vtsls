diff --git a/src/experimentTelemetryReporter.ts b/src/experimentTelemetryReporter.ts
index 8fd7ce4..b1d24bc 100644
--- a/src/experimentTelemetryReporter.ts
+++ b/src/experimentTelemetryReporter.ts
@@ -2,7 +2,7 @@
  *  Copyright (c) Microsoft Corporation. All rights reserved.
  *  Licensed under the MIT License. See License.txt in the project root for license information.
  *--------------------------------------------------------------------------------------------*/
-
+// @ts-nocheck
 import VsCodeTelemetryReporter from '@vscode/extension-telemetry';
 import * as vscode from 'vscode';
 import * as tas from 'vscode-tas-client';
diff --git a/src/typescriptServiceClient.ts b/src/typescriptServiceClient.ts
index 25dfca2..01dbf29 100644
--- a/src/typescriptServiceClient.ts
+++ b/src/typescriptServiceClient.ts
@@ -1060,7 +1060,7 @@ export default class TypeScriptServiceClient extends Disposable implements IType
 	private addWatchEvent(id: number, eventType: keyof WatchEvent, path: string) {
 		let event = this.watchEvents.get(id);
 		const removeEvent = (typeOfEventToRemove: keyof WatchEvent) => {
-			if (event?.[typeOfEventToRemove]?.delete(path) && event[typeOfEventToRemove].size === 0) {
+			if (event?.[typeOfEventToRemove]?.delete(path) && event[typeOfEventToRemove]?.size === 0) {
 				event[typeOfEventToRemove] = undefined;
 			}
 		};
diff --git a/src/languageFeatures/fileConfigurationManager.ts b/src/languageFeatures/fileConfigurationManager.ts
index 1556037..19a1571 100644
--- a/src/languageFeatures/fileConfigurationManager.ts
+++ b/src/languageFeatures/fileConfigurationManager.ts
@@ -198,6 +198,7 @@ export default class FileConfigurationManager extends Disposable {
 			includeCompletionsWithClassMemberSnippets: config.get<boolean>('suggest.classMemberSnippets.enabled', true),
 			includeCompletionsWithObjectLiteralMethodSnippets: config.get<boolean>('suggest.objectLiteralMethodSnippets.enabled', true),
 			autoImportFileExcludePatterns: this.getAutoImportFileExcludePatternsPreference(preferencesConfig, vscode.workspace.getWorkspaceFolder(document.uri)?.uri),
+			// @ts-expect-error
 			preferTypeOnlyAutoImports: preferencesConfig.get<boolean>('preferTypeOnlyAutoImports', false),
 			useLabelDetailsInCompletionEntries: true,
 			allowIncompleteCompletions: true,
diff --git a/src/typescriptService.ts b/src/typescriptService.ts
index 931b287..d028411 100644
--- a/src/typescriptService.ts
+++ b/src/typescriptService.ts
@@ -76,7 +76,9 @@ interface StandardTsServerRequests {
 	'findSourceDefinition': [Proto.FileLocationRequestArgs, Proto.DefinitionResponse];
 	'getMoveToRefactoringFileSuggestions': [Proto.GetMoveToRefactoringFileSuggestionsRequestArgs, Proto.GetMoveToRefactoringFileSuggestions];
 	'linkedEditingRange': [Proto.FileLocationRequestArgs, Proto.LinkedEditingRangeResponse];
+	// @ts-expect-error
 	'mapCode': [Proto.MapCodeRequestArgs, Proto.MapCodeResponse];
+	// @ts-expect-error
 	'getPasteEdits': [Proto.GetPasteEditsRequestArgs, Proto.GetPasteEditsResponse];
 }
 
